/**
 * Style for ApText.
 * @constructor ApTextStyle
 */

"use strict";

var React = require('react'),
    ApStyle = require('apeman-react-style')['ApStyle'];

/** @lends ApTextStyle */
var ApTextStyle = React.createClass({
    propTypes: ApStyle.propTypes,
    getDefaultProps: function () {
        return {
            data: {
                '.ap-text': {
                    'display': 'block',
                    'padding': '4px 8px',
                    'border': '1px solid #AAA',
                    'margin': '4px',
                    'width': '100%',
                    'maxWidth': '480px',
                    'borderRadius': '2px',
                    'boxShadow': '1px 1px 1px rgba(0,0,0,.05) inset'
                },
                '.ap-text-multiple': {
                    'overflow': 'auto'
                }
            }
        };
    },
    render: function () {
        var s = this;
        return React.createElement(ApStyle, s.props);
    }
});
module.exports = ApTextStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzeC9hcF90ZXh0X3N0eWxlLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUtBLFlBQVksQ0FBQzs7QUFFYixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3hCLE9BQU8sR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxTQUFTLENBQUM7OztBQUFDLEFBR3ZELElBQUksV0FBVyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUM7QUFDaEMsYUFBUyxFQUFFLE9BQU8sQ0FBQyxTQUFTO0FBQzVCLG1CQUFlLEVBQUUsWUFBWTtBQUN6QixlQUFPO0FBQ0gsZ0JBQUksRUFBRTtBQUNGLDBCQUFVLEVBQUU7QUFDUiw2QkFBUyxFQUFFLE9BQU87QUFDbEIsNkJBQVMsRUFBRSxTQUFTO0FBQ3BCLDRCQUFRLEVBQUUsZ0JBQWdCO0FBQzFCLDRCQUFRLEVBQUUsS0FBSztBQUNmLDJCQUFPLEVBQUUsTUFBTTtBQUNmLDhCQUFVLEVBQUUsT0FBTztBQUNuQixrQ0FBYyxFQUFFLEtBQUs7QUFDckIsK0JBQVcsRUFBRSxtQ0FBbUM7aUJBQ25EO0FBQ0QsbUNBQW1CLEVBQUU7QUFDakIsOEJBQVUsRUFBRSxNQUFNO2lCQUNyQjthQUNKO1NBQ0osQ0FBQTtLQUNKO0FBQ0QsVUFBTSxFQUFFLFlBQVk7QUFDaEIsWUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ2IsZUFBTyxLQUFLLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDaEQ7Q0FDSixDQUFDLENBQUM7QUFDSCxNQUFNLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQyIsImZpbGUiOiJhcF90ZXh0X3N0eWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9va3VuaXNoaXRha2EvcHJvamVjdHMvYXBlbWFuLXJlYWN0LWxhYm8vYXBlbWFuLXJlYWN0LXRleHQvbGliL2pzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3R5bGUgZm9yIEFwVGV4dC5cbiAqIEBjb25zdHJ1Y3RvciBBcFRleHRTdHlsZVxuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpLFxuICAgIEFwU3R5bGUgPSByZXF1aXJlKCdhcGVtYW4tcmVhY3Qtc3R5bGUnKVsnQXBTdHlsZSddO1xuXG4vKiogQGxlbmRzIEFwVGV4dFN0eWxlICovXG52YXIgQXBUZXh0U3R5bGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiBBcFN0eWxlLnByb3BUeXBlcyxcbiAgICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAnLmFwLXRleHQnOiB7XG4gICAgICAgICAgICAgICAgICAgICdkaXNwbGF5JzogJ2Jsb2NrJyxcbiAgICAgICAgICAgICAgICAgICAgJ3BhZGRpbmcnOiAnNHB4IDhweCcsXG4gICAgICAgICAgICAgICAgICAgICdib3JkZXInOiAnMXB4IHNvbGlkICNBQUEnLFxuICAgICAgICAgICAgICAgICAgICAnbWFyZ2luJzogJzRweCcsXG4gICAgICAgICAgICAgICAgICAgICd3aWR0aCc6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAgICAgJ21heFdpZHRoJzogJzQ4MHB4JyxcbiAgICAgICAgICAgICAgICAgICAgJ2JvcmRlclJhZGl1cyc6ICcycHgnLFxuICAgICAgICAgICAgICAgICAgICAnYm94U2hhZG93JzogJzFweCAxcHggMXB4IHJnYmEoMCwwLDAsLjA1KSBpbnNldCdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcuYXAtdGV4dC1tdWx0aXBsZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ292ZXJmbG93JzogJ2F1dG8nXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChBcFN0eWxlLCBzLnByb3BzKTtcbiAgICB9XG59KTtcbm1vZHVsZS5leHBvcnRzID0gQXBUZXh0U3R5bGU7XG5cblxuIl19